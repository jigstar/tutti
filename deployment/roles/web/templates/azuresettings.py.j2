"""Production specific settings for Azure virtual machine deployment."""
from tutti.settings import *  # noqa: F403

DEBUG = False

# About secrets
#
# Secret key & PostgreSQL database password
# These secrets are randomly generated by the deployment script and stored
# inside a file.
#
# LDAP password
# Secrets that can not be randomly generated are instead injected using Azure
# Managed Service Identity. The secrets are stored inside Azure Key Vault.
# See: https://docs.microsoft.com/en-us/azure/key-vault/tutorial-python-linux-virtual-machine

with open('{{ secret_key_path }}') as f:
    SECRET_KEY = f.read().strip()

with open('{{ postgres_password_path }}') as f:
    DATABASES['default'] = {  # noqa: F405
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'tutti',
        'USER': 'tutti',
        'HOST': 'localhost',
        'PASSWORD': f.read().strip(),
        'CONN_MAX_AGE': 3600,
    }


# https://docs.microsoft.com/en-us/azure/key-vault/tutorial-python-linux-virtual-machine#understand-managed-service-identity

# # importing the requests library
# import requests
#
# # Step 1: Fetch an access token from an MSI-enabled Azure resource
# # Note that the resource here is https://vault.azure.net for the public cloud, and api-version is 2018-02-01
# MSI_ENDPOINT = "http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&resource=https%3A%2F%2Fvault.azure.net"
# r = requests.get(MSI_ENDPOINT, headers = {"Metadata" : "true"})
#
# # Extracting data in JSON format
# # This request gets an access token from Azure Active Directory by using the local MSI endpoint
# data = r.json()
#
# # Step 2: Pass the access token received from the previous HTTP GET call to the key vault
# KeyVaultURL = "https://prashanthwinvmvault.vault.azure.net/secrets/RandomSecret?api-version=2016-10-01"
# kvSecret = requests.get(url = KeyVaultURL, headers = {"Authorization": "Bearer " + data["access_token"]})
#
# print(kvSecret.json()["value"])

# E-mail configuration
# Using the G Suite relay service we can send mails from @esmgquadrivium.nl.
# Authentication works via IP address, thus it only works on the production server.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.gmail.com'
EMAIL_USE_SSL = True
SERVER_EMAIL = 'info@esmgquadrivium.nl'
DEFAULT_FROM_EMAIL = 'info@esmgquadrivium.nl'
ADMINS = ['sysop@esmgquadrivium.nl']

ALLOWED_HOSTS = ['{{ server_name }}']

STATIC_ROOT = '{{ static_path }}'
MEDIA_ROOT = '{{ media_path }}'

# HTTPS
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
