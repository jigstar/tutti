upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/run/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server app:8000 fail_timeout=0;
}


server {
    listen 80;
    # Azure does not support IPv6, if it did, we should add:
    # listen [::]:80;
    #server_name tutti.esmgquadrivium.nl;
    client_max_body_size 4G;


    location /static/ {
        alias /srv/static/;

        expires max;
        add_header Cache-Control "public";

        # We cache static files indefinitely!
        #
        # Therefore file names need to be changed whenever the file contents
        # have changed in order for client caches to be updated with the new
        # file. Otherwise they'll keep using the old cached version. To achieve
        # this, we set Django to use its ManifestStaticFilesStorage.
    }

    location /media/ {
        alias /srv/media/;
    }

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://app_server;
    }

}

#server {
#    # if no Host match, close the connection to prevent host spoofing
#    listen 80 default_server;
#    listen 443 ssl default_server;
#    # Azure does not support IPv6, if it did, we should add:
#    # listen [::]:80;
#    include snippets/snakeoil.conf;  # Some random certificate
#    server_name _;
#    return 444;
#}
